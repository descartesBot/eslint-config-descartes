module.exports = {
  env: {
    node: true,
  },
  parserOptions: {
    ecmaVersion: 'latest',
    ecmaFeatures: {
      jsx: true,
    },
  },
  plugins: ['import', 'react'],
  rules: {
    'for-direction': 'off',
    'getter-return': 'error',
    'no-async-promise-executor': 'error',
    'no-await-in-loop': 'error',
    'no-compare-neg-zero': 'error',
    'no-cond-assign': ['error', 'always'],
    'no-constant-binary-expression': 'error',
    'no-constant-condition': 'error',
    'no-control-regex': 'error',
    'no-debugger': 'error',
    'no-dupe-args': 'error',
    'no-dupe-else-if': 'error',
    'no-dupe-keys': 'error',
    'no-duplicate-case': 'error',
    'no-empty': 'error',
    'no-empty-character-class': 'error',
    'no-var': 'error',
    'block-scoped-var': 'error',
    'no-extra-parens': ['error', 'all', {
      'conditionalAssign': false,
      'returnAssign': false,
      'nestedBinaryExpressions': false,
      'enforceForArrowConditionals': false,
      'ignoreJSX': 'all',
    }],
    'no-loss-of-precision': 'error',
    'no-misleading-character-class': 'error',
    'no-obj-calls': 'error',
    'no-promise-executor-return': 'error',
    'no-prototype-builtins': 'error',
    'no-regex-spaces': 'error',
    'no-setter-return': 'error',
    'no-sparse-arrays': 'error',
    'no-template-curly-in-string': 'error',
    'no-ex-assign': 'error',
    'no-extra-boolean-cast': 'error',
    'no-extra-semi': 'error',
    'no-func-assign': 'error',
    'no-import-assign': 'error',
    'no-inner-declarations': 'error',
    'no-invalid-regexp': 'error',
    'no-irregular-whitespace': 'error',
    'no-unexpected-multiline': 'error',
    'no-unreachable': 'error',
    'no-unreachable-loop': 'error',
    'no-unsafe-finally': 'error',
    'no-unsafe-negation': 'error',
    'no-unsafe-optional-chaining': ['error', {
      disallowArithmeticOperators: true,
    }],

    'no-unused-private-class-members': 'off',
    'class-methods-use-this': 'off',
    'require-atomic-updates': 'error',
    'use-isnan': 'error',
    'valid-jsdoc': 'off',
    'valid-typeof': ['error', {
      requireStringLiterals: true,
    }],
    'eqeqeq': ['error', 'always'],
    'func-names': ['error', 'always'],
    'new-cap': ['error', {
      'newIsCap': true,
      'capIsNew': false,
    }],
    'no-bitwise': 'off',
    'no-plusplus': 'off',
    'no-console': 'warn',
    'no-void': ['error', {
      'allowAsStatement': true,
    }],
    'no-useless-return': 'error',
    'no-return-assign': ['error', 'always'],
    'no-return-await': 'error',
    'no-throw-literal': 'error',
    'no-useless-catch': 'error',
    'no-useless-computed-key': 'error',
    'no-useless-escape': 'error',
    'no-useless-rename': ['error', {
      'ignoreDestructuring': false,
      'ignoreImport': false,
      'ignoreExport': false,
    }],
    'no-useless-backreference': 'error',
    'no-useless-call': 'error',
    'no-useless-concat': 'error',
    'no-useless-constructor': 'error',
    'prefer-arrow-callback': 'error',
    'arrow-parens': ['error', 'always'],
    'prefer-const': ['error', {
      'destructuring': 'any',
      'ignoreReadBeforeAssign': false,
    }],
    'require-await': 'error',
    'yoda': 'error',
    'block-spacing': ['error', 'always'],
    'brace-style': 'error',
    'comma-dangle': ['error', 'always-multiline'],
    'comma-spacing': ['error', {
      'before': false,
      'after': true,
    }],
    'computed-property-spacing': 'off',
    'quotes': ['error', 'single'],
    'indent': ['error', 2, {
      'SwitchCase': 1,
    }],
    'no-lonely-if': 'error',
    'no-shadow': 'error',
    'no-shadow-restricted-names': 'error',
    'no-unused-vars': 'error',
    'no-use-before-define': 'error',
    'semi': ['error', 'always'],
    'max-len': ['error', 100, 2, {
      'ignoreUrls': true,
      'ignoreComments': true,
      'ignoreRegExpLiterals': true,
      'ignoreStrings': true,
      'ignoreTemplateLiterals': true,
    }],
    'eol-last': ['error', 'always'],
    'import/newline-after-import': 'error',
    'space-before-function-paren': ['error', 'always'],
    'space-unary-ops': 'error',
    'semi-spacing': 'error',
    'space-in-parens': ['error', 'never'],
  },
};
